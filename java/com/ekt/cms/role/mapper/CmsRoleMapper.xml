<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ekt.cms.role.dao.CmsRoleMapper">
	<resultMap id="BaseResultMap" type="com.ekt.cms.role.entity.CmsRole">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="encoding" property="encoding" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="INTEGER" />
	</resultMap>

<!-- 根据用户id查询 -->
	<select id="getCmsRoleById" resultType="com.ekt.cms.role.entity.CmsRole"  parameterType="java.lang.Integer">
		SELECT * FROM cms_role WHERE id = #{id}
	</select>
	
<!-- 	获取角色列表 -->
	 <select id="listPage" resultMap="BaseResultMap" parameterType="com.ekt.cms.role.entity.CmsRole">
  		SELECT * FROM cms_role 
  		WHERE 1=1
  			<if test="cmsRole.name !=null and cmsRole.name !='' ">
  		AND name=#{cmsRole.name}	
  			</if>
  			<if test="cmsRole.encoding !=null and cmsRole.encoding !='' ">
  		AND encoding=#{cmsRole.encoding}	
  			</if>  
		<if test="cmsRole.id !=1">
			AND id&lt;&gt;1
		</if>
  	</select>
	
	
	<select id="getCmsRoleList" resultMap="BaseResultMap"  parameterType="com.ekt.cms.role.entity.CmsRole">
		SELECT * FROM cms_role WHERE 1=1 
		<if test="cmsRole.id != null and cmsRole.id != '' ">
			AND id = #{cmsRole.id}
		</if>
		<if test="cmsRole.encoding != null and cmsRole.encoding != '' ">
			AND id = #{cmsRole.encoding}
		</if>
		<if test="cmsRole.status != null and cmsRole.status != '' ">
			AND id = #{cmsRole.status}
		</if>
			AND id&lt;&gt;1
	</select>
	<insert id="addCmsRole"  parameterType="com.ekt.cms.role.entity.CmsRole">
		INSERT INTO 
			cms_role ( `name` , `encoding` , `create_time`,`status`) 
		VALUES 
		    (#{cmsRole.name,jdbcType=VARCHAR}, #{cmsRole.encoding,jdbcType=VARCHAR}, SYSDATE(),1)
		<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	<select id="getCmsRoleByNameOrEncoding"  resultType="com.ekt.cms.role.entity.CmsRole"  parameterType="com.ekt.cms.role.entity.CmsRole">
		SELECT * FROM cms_role WHERE name=#{cmsRole.name} OR encoding=#{cmsRole.encoding}	
	</select>
	
	<delete id="deleteCmsRole" parameterType="java.lang.Integer">
		DELETE FROM cms_role
		WHERE id = #{id,jdbcType=INTEGER}
		AND id &lt;&gt; 1
	</delete>
	
	<update id="updateCmsRole" parameterType="com.ekt.cms.role.entity.CmsRole">
		UPDATE cms_role SET 
			name=#{cmsRole.name},encoding=#{cmsRole.encoding}
		WHERE id=#{cmsRole.id}
	</update>
	
	<select id="getCmsRoleByEncoding" resultType="com.ekt.cms.role.entity.CmsRole" parameterType="java.lang.String">
		SELECT * FROM cms_role WHERE encoding=#{encoding}
	</select>
	
	<update id="confine" parameterType="com.ekt.cms.role.entity.CmsRole">
		UPDATE cms_role SET status=#{cmsRole.status}
		WHERE id=#{cmsRole.id}
	</update>
	
	<select id="getParentMenuList" parameterType="com.ekt.cms.role.entity.Keyword" resultType="java.util.Map" >
		SELECT 
			p.id,p.parent_id pId,p.menu_name,IF (m.menu_id IS NULL,0,1) AS isTrue
		FROM (
				SELECT * FROM cms_menu p WHERE p. LEVEL = 1 AND p. STATUS = 1 ) AS p
		LEFT JOIN (
				SELECT r.menu_id FROM cms_role_menu r
		WHERE  
			r.role_id = #{keyword.roleId}
	 		) AS m ON p.id = m.menu_id
	
	</select>
	<select id="getSonMenuList" parameterType="com.ekt.cms.role.entity.Keyword" resultType="java.util.Map">
		SELECT
			p.id,p.parent_id pId,p.menu_name,IF (m.menu_id IS NULL,0,1) AS isTrue
	    FROM(
			SELECT * FROM cms_menu p 
			WHERE p.parent_id=#{keyword.parentId}
			AND p. STATUS = 1 ) AS p
		LEFT JOIN ( SELECT r.menu_id FROM cms_role_menu r WHERE r.role_id = #{keyword.roleId} ) AS m
		ON p.id = m.menu_id
	</select>
	<select id="getPermission" parameterType="com.ekt.cms.role.entity.Keyword" resultType="java.util.Map" >
			SELECT  a.*,if(b.permission_id is NULL,0,1)isTrue from (
			SELECT
				mp.menu_id,mp.permission_id,p.name
			FROM
				cms_menu_permission mp
			LEFT JOIN cms_permission p ON mp.permission_id = p.id
			WHERE
				mp.menu_id = #{keyword.menuId}
			)as a LEFT JOIN (SELECT permission_id from cms_role_permission 
					WHERE role_id=#{keyword.roleId} )as b
			on a.permission_id=b.permission_id
	</select>

	
	<select id='getTreeByRoleId' resultType='java.util.Map'  parameterType='java.lang.Integer'>
			SELECT
				a.id,if(b.permission_id is null ,'false','true')checked,'false'chkDisabled,a.name,'false'oncheck,'true'open,a.pId,IF(a.LEVEL=2,'false','true')parent
			FROM
				( SELECT id,NAME,pid,LEVEL FROM cms_permission ) AS a
			LEFT JOIN (
			SELECT
				permission_id
			FROM
				cms_role_permission
			WHERE
				role_id = #{roleId}
			) AS b ON a.id = b.permission_id
				
	</select>	
	<delete id="delPermissionByRoleId" parameterType='java.lang.Integer'>
		DELETE FROM cms_role_permission
		WHERE role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insertRolePermission" parameterType="java.lang.Integer" >
	<selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO cms_role_permission ( role_id, permission_id) VALUES (#{roleId},#{permissionId})
	</insert>	
	
	
</mapper>