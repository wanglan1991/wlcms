<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ekt.cms.apiUser.dao.ApiUserMapper">
	<resultMap id="BaseResultMap" type="com.ekt.cms.apiUser.entity.ApiUser">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="user_name" property="username" jdbcType="CHAR" />
		<result column="password" property="password" jdbcType="CHAR" />
		<result column="real_name" property="realName" jdbcType="CHAR" />
		<result column="telephone" property="telephone" jdbcType="CHAR" />
		<result column="sex" property="sex" jdbcType="CHAR" />
		<result column="register_type" property="registerType" jdbcType="CHAR" />
		<result column="qq_open_id" property="qqOpenId" jdbcType="CHAR" />
		<result column="nickname" property="nickname" jdbcType="CHAR" />
		<result column="register_date" property="registerDate" jdbcType="DATE" />
		<result column="head_picture" property="headPicture" jdbcType="CHAR" />
		<result column="wechat_open_id" property="wechatOpenId" jdbcType="CHAR" />
		<result column="wechat_unionId" property="wechatUnionId" jdbcType="CHAR" />
		<result column="wechatGZ_open_id" property="wechatGZOpenId" jdbcType="CHAR" />
	</resultMap>
	
	<resultMap type="com.ekt.cms.apiUser.entity.ApiUser" id="userMap">
		<result column="id" property="id" jdbcType="INTEGER"/>
		<result column="user_name" property="username" jdbcType="VARCHAR"/>
		<result column="telephone" property="telephone" jdbcType="VARCHAR"/>
		<result column="sex" property="sex" jdbcType="VARCHAR"/>
		<result column="register_type" property="registerType" jdbcType="VARCHAR"/>
		<result column="register_date" property="registerDate" jdbcType="TIMESTAMP"/>
		<result column="nickname" property="nickname" jdbcType="VARCHAR"/>
		<result column="credits" property="credits" jdbcType="INTEGER"/>
		<result column="status" property="status" jdbcType="INTEGER"/>
		<result column="account_id" property="accountId" jdbcType="INTEGER"/>
		<result column="is_real" property="isReal" jdbcType="INTEGER"/>
		<result column="role" property="role" jdbcType="INTEGER"/>
		<result column="role_name" property="roleName" jdbcType="INTEGER"/>
		<result column="treated_count" property="treatedCount" jdbcType="INTEGER"/>
		<result column="untreated_count" property="untreatedCount" jdbcType="INTEGER"/>
	
	</resultMap>
	
	
	<resultMap type="com.ekt.cms.common.entity.TreeBean" id="EktUserPermissionTreeBeanMap">
		<result column="id" property="id" jdbcType="INTEGER"></result>
		<result column="chkDisabled" property="chkDisabled" jdbcType="VARCHAR"></result>
		<result column="name" property="name" jdbcType="VARCHAR"></result> 
		<result column="oncheck" property="oncheck" jdbcType="VARCHAR"></result>
		<result column="open" property="open" jdbcType="VARCHAR"></result> 
		<result column="pId" property="pId" jdbcType="INTEGER"></result> 
		<result column="parent" property="parent" jdbcType="VARCHAR"></result>
		<result column="checked" property="checked" jdbcType="VARCHAR"></result>
	</resultMap>
	
	<select id="getUserByUsername" parameterType="java.lang.String"
		resultType="com.ekt.cms.apiUser.entity.ApiUser">
	SELECT
  		COUNT(a.acceptance_status=0 OR NULL) untreatedCount,
		COUNT(a.acceptance_status=1 OR NULL)treatedCount ,
		u.id,
		u.user_name userName,
		u.real_name realName,
		u.telephone,
		u.sex,
		u.qq_open_id qqOpenId,
		u.nickname nickName,
		u.head_picture headPicture,
		u.register_date registerDate,
		u.wechat_open_id wechatOpenId,
		u.wechat_unionId wechatUnionId,
		u.wechatGZ_open_id wechatGZOpenId
	FROM
		api_user u
		LEFT JOIN api_user_business_acceptance a on u.id = a.user_id 
		WHERE
		u.user_name=#{userName}
		OR
		u.telephone=#{userName}
		OR
		u.qq_open_id=#{userName}
		OR
		u.wechat_open_id=#{userName}
		OR
		u.wechatGZ_open_id=#{userName}
		OR
		u.wechat_unionId=#{userName}
	GROUP BY u.id
	ORDER BY a.create_time DESC
	</select>
	
	<select id="listPage" parameterType="com.ekt.cms.apiUser.entity.ApiUser" resultMap="userMap">
		SELECT
				u.id,
				u.user_name,
				u.telephone,
				u.sex,
				u.register_type,
				u.register_date,
				u.nickname,
				u.credits,
				u.status,
	     		a.id account_id,
				a.role,
				r.name AS role_name,
				u.is_real,
				COUNT(ba.acceptance_status=0 OR NULL) untreated_count,
				COUNT(ba.acceptance_status=1 OR NULL)treated_count 
			FROM
				api_user u 
			LEFT JOIN cms_account a on u.id=a.ektapi_user_id
	    LEFT JOIN cms_role r on a.role=r.id
	    LEFT JOIN api_user_business_acceptance ba on u.id = ba.user_id 
		WHERE 1=1
		<if test="user.status!=null">
			AND u.status = #{user.status}
		</if>
		<if test="user.username!=null and user.username!=''">
			AND u.telephone like '%${user.username}%'
			OR u.user_name like '%${user.username}%'
			OR u.nickname like '%${user.username}%'
		</if>
		<if test="user.role!=null">
			a.role =#{user.role}
		</if>
		GROUP BY u.id
		ORDER BY u.id DESC
	</select>
	
	<update id="confine" parameterType="java.lang.Integer">
		UPDATE api_user SET status=IF(status=1,0,1) WHERE id=#{userId}
	</update>
	
	<select id="getEktUserPermissionDetail" resultMap="EktUserPermissionTreeBeanMap" parameterType="java.lang.Integer">
			
				SELECT
					'0' id,
					'false' chkDisabled,
					'全部' NAME,
					'false' oncheck,
					'true' OPEN,
					'-1' pId,
					'true' parent,
					'false' checked
				UNION
				
				SELECT a.*,IF(b.id IS NULL,'false','true')AS checked FROM
						(
						SELECT
							id,
						'false' chkDisabled,
						 remark AS name,
						'false' oncheck,
						'true' OPEN,
						 0 pId,
						 'false' parent
						FROM
							cms_dictionary
						WHERE
							type_encoding = 'ektUserPermission'
						
						ORDER BY id)AS a
						LEFT JOIN
						(
						SELECT id,ekt_permission_id FROM api_user_permission WHERE user_id=#{userId}						
						)AS b on a.id=b.ekt_permission_id
	</select>
	
	
		<select id="getEktUserPermissionDetail2" resultMap="EktUserPermissionTreeBeanMap" parameterType="java.lang.Integer">
		
		SELECT
					'0' id,
					'false' chkDisabled,
					'全部' NAME,
					'false' oncheck,
					'true' OPEN,
					'-1' pId,
					'true' parent,
					'false' checked
				UNION
		
		SELECT a.* ,IF(p.id IS NULL,'false','true')AS checked FROM (			
				SELECT a.* FROM
						(
						SELECT
							id,
						'false' chkDisabled,
						 remark AS name,
						'false' oncheck,
						'true' OPEN,
						 0 pId,
						 'false' parent
						FROM
							cms_dictionary
						WHERE
							type_encoding = 'ektUserPermission'
						
						ORDER BY id)AS a
						LEFT JOIN
						(
						SELECT id,ekt_permission_id FROM api_user_permission WHERE user_id=	#{parentId}				
						)AS b on a.id=b.ekt_permission_id
						WHERE b.id IS NOT NULL)AS a LEFT JOIN api_user_permission p on a.id=p.ekt_permission_id AND p.user_id=#{userId}
	</select>
	<delete id="delPermissionByUserId" parameterType="java.lang.Integer">
		DELETE 
		FROM 
			api_user_permission
		WHERE
			user_id=#{userId}
	</delete>
	
	<insert id="insertEktUserPermission" parameterType="java.lang.Integer">
		INSERT INTO api_user_permission(`user_id`, `ekt_permission_id`) VALUES (#{userId},#{dictPermissionId})
	</insert>
	
	<insert id="generateCmsAccountByUserId" parameterType="com.ekt.cms.account.entity.CmsAccount">
			INSERT INTO cms_account (
			`user_name`,
			`password`,
			`role`,
			`real_name`,
			`cellphone`,
			`status`,
			`create_date`,
			`ektapi_user_id`,
			`parent_id`
		)SELECT telephone,`password`,#{account.role},real_name,telephone,1,SYSDATE(),id,#{account.parentId} FROM api_user WHERE id =#{account.ektapiUserId}
	</insert>
	
	<select id="getUserBusiness" resultType="com.ekt.cms.apiUser.entity.CmsUserBusiness" parameterType="com.ekt.cms.apiUser.entity.CmsUserBusiness">
				SELECT
					b.id  AS businessId,
					u.id AS userId,
					u.real_name AS realname,
					u.user_name AS username,
					u.telephone,
					b.create_time AS createTime,
					b.remark,
					CASE b.business_type WHEN 1 THEN '申请成为老师'  WHEN 2 THEN '反馈与意见' END AS businessType,
					b.acceptance_status AS acceptanceStatus,
					b.acceptance_content AS acceptanceContent,
					b.acceptance_account_id AS  acceptanceAccountId
				FROM
					api_user_business_acceptance b
					LEFT JOIN api_user u on u.id=b.user_id
				WHERE 1=1
				<if test="userId!=0">
				AND	b.user_id = #{userId}
				</if>
				<if test="businessId!=0">
				AND	b.id = #{businessId}
				</if>
				<if test="acceptanceStatus!=null">
				AND b.acceptance_status=#{acceptanceStatus}
					ORDER BY b.acceptance_time DESC
				</if>
				<if test="acceptanceStatus==null">
					ORDER BY b.create_time DESC
				</if>
				
				LIMIT 1
	</select>
	<update id="acceptanceUserBusiness" parameterType="com.ekt.cms.apiUser.entity.CmsUserBusiness">
		UPDATE 
			api_user_business_acceptance 
		SET 
			acceptance_status=#{acceptanceStatus},
			acceptance_account_id=#{acceptanceAccountId},
			acceptance_time=#{acceptanceTime},
			acceptance_content=#{acceptanceContent}
		WHERE id =#{businessId}
	
	</update>
	
	<select id="getUserBusinessListByUserId" parameterType="java.lang.Integer" resultType="com.ekt.cms.apiUser.entity.CmsUserBusiness">
	
			SELECT
				b.id AS businessId,
				u.id AS userId,
				u.real_name AS realname,
				u.user_name AS username,
				u.telephone,
				b.create_time AS createTime,
				b.remark,
				CASE b.business_type WHEN 1 THEN '申请成为老师' WHEN 2 THEN '反馈与意见' END AS businessType,
				b.acceptance_status AS acceptanceStatus,
				b.acceptance_content AS acceptanceContent,
				b.acceptance_account_id AS  acceptanceAccountId,
				b.acceptance_time AS acceptanceTime,
				c.real_name AS accountRealname
			FROM
				api_user_business_acceptance b
				LEFT JOIN api_user u on u.id=b.user_id
				LEFT JOIN cms_account c on b.acceptance_account_id=c.id
			WHERE
				b.user_id = #{userId}	
				ORDER BY b.create_time DESC
	</select>
	
	<update id="isRealUser" parameterType="java.lang.Integer">
		UPDATE api_user SET is_real=#{isReal} WHERE id =#{userId}
	</update>
</mapper>